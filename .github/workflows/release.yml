name: Release

on:
  workflow_dispatch:
  pull_request_target:
    types:
      - closed
    branches:
      - 'main'

env:
  # Default value given to the commit log, in cases where issues occur.
  commit_log: "UNAVAILABLE"

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      # TESTING - Print out required outputs and commands.
      - name: TESTING GIT COMMANDS
        run: |
          git fetch main
          git status
          git branch -a
          git cherry -v
          git cherry -v fix/release_desc_not_listing_commits
          git cherry -v fix/release_desc_not_listing_commits main

      # # Use 'git cherry' to print and store a fill log of all commits in this release.
      # - name: Store commit log as env variable
      #   run: echo "commit_log=$(git cherry -v main ${{ github.event.pull_request.head.ref }})" >> "$GITHUB_ENV"

      # # Get build artifacts from previous project builds, across all platforms.
      # - name: Download artifacts from Linux builds
      #   uses: dawidd6/action-download-artifact@v3
      #   with:
      #     github_token: ${{secrets.GITHUB_TOKEN}}
      #     workflow: build.yml
      #     branch: ${{ github.event.pull_request.head.ref }}
      #     workflow_search: false
      #     workflow_conclusion: success
      #     name: TotkArmorTracker_Linux
          
      # - name: Download artifacts from Windows builds
      #   uses: dawidd6/action-download-artifact@v3
      #   with:
      #     github_token: ${{secrets.GITHUB_TOKEN}}
      #     workflow: build.yml
      #     branch: ${{ github.event.pull_request.head.ref }}
      #     workflow_search: false
      #     workflow_conclusion: success
      #     name: TotkArmorTracker_Windows

      # - name: Create new release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ github.event.pull_request.head.ref }}
      #     release_name: Release ${{ github.event.pull_request.head.ref }}
      #     draft: false
      #     prerelease: false
      #     body: |
      #       Changes in this release:
            
      #       ${{ env.commit_log }}

      # - name: Upload Windows Bundle
      #   id: upload-windows-release
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: TotkArmorTracker_Windows.zip
      #     asset_name: TotkArmorTracker_Windows.zip
      #     asset_content_type: application/zip

      # - name: Upload Linux Bundle
      #   id: upload-linux-release
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: TotkArmorTracker_Linux.zip
      #     asset_name: TotkArmorTracker_Linux.zip
      #     asset_content_type: application/zip
