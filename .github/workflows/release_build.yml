name: Release Build

on:
  workflow_dispatch:
  push:
    branches:
      # Run in the following cases.
      # - New pushes to release branches (eg. release/v1.0.0)
      # - New pushes to feature or fix branches (eg. feature/***, fix/***)
      # - New merges with main branch.
      # Only when release/** branches merge into main are release packages created below.
      - "main"
      - "release/**"
      - "feature/**"
      - "fix/**"
  pull_request:
    types:
      - closed
    branches:
      - 'main'
  

env:
  # Mark whether the current build is should create a new release.
  # Currently, this only applies when release branches are merged into main.
  RELEASE: ${{ github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, 'refs/heads/release/') }}
    
jobs:
  # Build steps for Linux executables. Compiles and packages the app as an archived .zip file.
  build_linux:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        aqtversion: '==3.1.*'
        version: '6.5.3'
        host: 'linux'
        target: 'desktop'
        arch: 'gcc_64'

    - name: Create bin dir
      run: mkdir bin
      
    - name: Run qmake
      run: qmake ../project/TotkArmorTracker.pro -spec linux-g++ CONFIG+=qtquickcompiler
      working-directory: ./bin

    - name: Build project
      run: make -j
      working-directory: ./bin

    - name: Zip release package
      run: 7z a TotkArmorTracker_Linux.zip ./bin/* ./bin/**/*

    # Build is only archived when creating a new release version (release/** or main).
    - name: Archive resulting executable
      if: ${{ env.RELEASE == 'true' }}
      uses: actions/upload-artifact@v4
      with:
        name: TotkArmorTracker_Linux
        path: TotkArmorTracker_Linux.zip

  # Build steps for Windows executables. Compiles and packages the app as an archived .zip file.
  build_windows:
    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        aqtversion: '==3.1.*'
        version: '6.5.3'
        host: 'windows'
        target: 'desktop'
        arch: 'win64_msvc2019_64'
        tools: 'tools_qtcreator,qt.tools.qtcreator'

    - name: Set up MSVC paths
      uses: TheMrMilchmann/setup-msvc-dev@v3
      with:
        arch: x64

    - name: Create bin dir
      run: mkdir bin

    - name: Run qmake
      run: qmake ../project/TotkArmorTracker.pro -spec win32-msvc "CONFIG+=qtquickcompiler"
      working-directory: ./bin

    - name: Prepare make file
      run: ${{ env.IQTA_TOOLS }}\QtCreator\bin\jom\jom.exe -f Makefile qmake_all
      working-directory: ./bin

    - name: Build project
      run: ${{ env.IQTA_TOOLS }}\QtCreator\bin\jom\jom.exe
      working-directory: ./bin

    - name: Bundle required dlls and added files
      run: |
        copy ../*.xml .
        windeployqt ./TotkArmorTracker.exe --qmldir ../../project
      working-directory: ./bin/release

    - name: Zip release package
      run: 7z a TotkArmorTracker_Windows.zip ./bin/release/* ./bin/release/**/*

    # Build is only archived when creating a new release version (release/** or main).
    - name: Archive resulting executable
      if: ${{ env.RELEASE == 'true' }}
      uses: actions/upload-artifact@v4
      with:
        name: TotkArmorTracker_Windows
        path: TotkArmorTracker_Windows.zip

  # Steps to create a new Github release. Only runs on specific branches,
  # and only when both windows/linux workflow stages are successfully completed.
  release:
    runs-on: ubuntu-latest
    needs: ["build_linux", "build_windows"]

    steps:
      - name: Download artifacts from Windows builds
        if: ${{ env.RELEASE == 'true' }}
        uses: actions/download-artifact@v4
        with:
          name: TotkArmorTracker_Windows
        
      - name: Download artifacts from Linux builds
        if: ${{ env.RELEASE == 'true' }}
        uses: actions/download-artifact@v4
        with:
          name: TotkArmorTracker_Linux

      - name: Create new release
        id: create_release
        if: ${{ env.RELEASE == 'true' }}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.pull_request.head.repo}}
          release_name: Release ${{ github.event.pull_request.head.repo }}
          draft: false
          prerelease: false

      - name: Upload Windows Release
        id: upload-windows-release 
        if: ${{ env.RELEASE == 'true' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: TotkArmorTracker_Windows.zip
          asset_name: TotkArmorTracker_Windows.zip
          asset_content_type: application/zip

      - name: Upload Linux Release
        id: upload-linux-release 
        if: ${{ env.RELEASE == 'true' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: TotkArmorTracker_Linux.zip
          asset_name: TotkArmorTracker_Linux.zip
          asset_content_type: application/zip
